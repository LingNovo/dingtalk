// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sns.proto

package oapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 第三方网站使用钉钉账号登陆请求参数
type SnsAuthorizeRequest struct {
	// 重定向地址(需要urlencode编码),该地址所在域名需要配置为appid对应的安全域名，必填
	RedirectUri string `protobuf:"bytes,1,opt,name=redirectUri,proto3" json:"redirectUri,omitempty"`
	// 用于防止重放攻击，选填
	State string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	// 取值为snsapi_login或snsapi_auth，snsapi_login用于钉钉容器外获取用户授权，snsapi_auth用于钉钉容器内获取用户授权，必填
	Scope                string   `protobuf:"bytes,3,opt,name=scope,proto3" json:"scope,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnsAuthorizeRequest) Reset()         { *m = SnsAuthorizeRequest{} }
func (m *SnsAuthorizeRequest) String() string { return proto.CompactTextString(m) }
func (*SnsAuthorizeRequest) ProtoMessage()    {}
func (*SnsAuthorizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sns_8c9a9af02e9da34c, []int{0}
}
func (m *SnsAuthorizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnsAuthorizeRequest.Unmarshal(m, b)
}
func (m *SnsAuthorizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnsAuthorizeRequest.Marshal(b, m, deterministic)
}
func (dst *SnsAuthorizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnsAuthorizeRequest.Merge(dst, src)
}
func (m *SnsAuthorizeRequest) XXX_Size() int {
	return xxx_messageInfo_SnsAuthorizeRequest.Size(m)
}
func (m *SnsAuthorizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SnsAuthorizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SnsAuthorizeRequest proto.InternalMessageInfo

func (m *SnsAuthorizeRequest) GetRedirectUri() string {
	if m != nil {
		return m.RedirectUri
	}
	return ""
}

func (m *SnsAuthorizeRequest) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *SnsAuthorizeRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

// 第三方网站使用钉钉账号登陆响应参数
type SnsAuthorizeResponse struct {
	// 目标地址
	TargetUrl            string   `protobuf:"bytes,1,opt,name=TargetUrl,proto3" json:"TargetUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnsAuthorizeResponse) Reset()         { *m = SnsAuthorizeResponse{} }
func (m *SnsAuthorizeResponse) String() string { return proto.CompactTextString(m) }
func (*SnsAuthorizeResponse) ProtoMessage()    {}
func (*SnsAuthorizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sns_8c9a9af02e9da34c, []int{1}
}
func (m *SnsAuthorizeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnsAuthorizeResponse.Unmarshal(m, b)
}
func (m *SnsAuthorizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnsAuthorizeResponse.Marshal(b, m, deterministic)
}
func (dst *SnsAuthorizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnsAuthorizeResponse.Merge(dst, src)
}
func (m *SnsAuthorizeResponse) XXX_Size() int {
	return xxx_messageInfo_SnsAuthorizeResponse.Size(m)
}
func (m *SnsAuthorizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SnsAuthorizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SnsAuthorizeResponse proto.InternalMessageInfo

func (m *SnsAuthorizeResponse) GetTargetUrl() string {
	if m != nil {
		return m.TargetUrl
	}
	return ""
}

// 扫码登陆请求参数
type QrconnectRequest struct {
	// 重定向地址(需要urlencode编码),该地址所在域名需要配置为appid对应的安全域名，必填
	RedirectUri string `protobuf:"bytes,1,opt,name=redirectUri,proto3" json:"redirectUri,omitempty"`
	// 用于防止重放攻击，选填
	State                string   `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QrconnectRequest) Reset()         { *m = QrconnectRequest{} }
func (m *QrconnectRequest) String() string { return proto.CompactTextString(m) }
func (*QrconnectRequest) ProtoMessage()    {}
func (*QrconnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sns_8c9a9af02e9da34c, []int{2}
}
func (m *QrconnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QrconnectRequest.Unmarshal(m, b)
}
func (m *QrconnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QrconnectRequest.Marshal(b, m, deterministic)
}
func (dst *QrconnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QrconnectRequest.Merge(dst, src)
}
func (m *QrconnectRequest) XXX_Size() int {
	return xxx_messageInfo_QrconnectRequest.Size(m)
}
func (m *QrconnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QrconnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QrconnectRequest proto.InternalMessageInfo

func (m *QrconnectRequest) GetRedirectUri() string {
	if m != nil {
		return m.RedirectUri
	}
	return ""
}

func (m *QrconnectRequest) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

// 扫码登陆响应参数
type QrconnectResponse struct {
	// 目标地址
	TargetUrl            string   `protobuf:"bytes,1,opt,name=TargetUrl,proto3" json:"TargetUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QrconnectResponse) Reset()         { *m = QrconnectResponse{} }
func (m *QrconnectResponse) String() string { return proto.CompactTextString(m) }
func (*QrconnectResponse) ProtoMessage()    {}
func (*QrconnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sns_8c9a9af02e9da34c, []int{3}
}
func (m *QrconnectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QrconnectResponse.Unmarshal(m, b)
}
func (m *QrconnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QrconnectResponse.Marshal(b, m, deterministic)
}
func (dst *QrconnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QrconnectResponse.Merge(dst, src)
}
func (m *QrconnectResponse) XXX_Size() int {
	return xxx_messageInfo_QrconnectResponse.Size(m)
}
func (m *QrconnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QrconnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QrconnectResponse proto.InternalMessageInfo

func (m *QrconnectResponse) GetTargetUrl() string {
	if m != nil {
		return m.TargetUrl
	}
	return ""
}

// 获取用户授权的持久授权码请求参数
type SnsGetPersistentCodeRequest struct {
	// 用户授权给钉钉开放应用的临时授权码
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnsGetPersistentCodeRequest) Reset()         { *m = SnsGetPersistentCodeRequest{} }
func (m *SnsGetPersistentCodeRequest) String() string { return proto.CompactTextString(m) }
func (*SnsGetPersistentCodeRequest) ProtoMessage()    {}
func (*SnsGetPersistentCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sns_8c9a9af02e9da34c, []int{4}
}
func (m *SnsGetPersistentCodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnsGetPersistentCodeRequest.Unmarshal(m, b)
}
func (m *SnsGetPersistentCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnsGetPersistentCodeRequest.Marshal(b, m, deterministic)
}
func (dst *SnsGetPersistentCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnsGetPersistentCodeRequest.Merge(dst, src)
}
func (m *SnsGetPersistentCodeRequest) XXX_Size() int {
	return xxx_messageInfo_SnsGetPersistentCodeRequest.Size(m)
}
func (m *SnsGetPersistentCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SnsGetPersistentCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SnsGetPersistentCodeRequest proto.InternalMessageInfo

func (m *SnsGetPersistentCodeRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

// 获取用户授权的持久授权码响应参数
type SnsGetPersistentCodeResponse struct {
	// 返回码
	Errcode int64 `protobuf:"varint,1,opt,name=errcode,proto3" json:"errcode,omitempty"`
	// 对返回码的文本描述内容
	Errmsg string `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	// 用户在当前开放应用内的唯一标识
	Openid string `protobuf:"bytes,3,opt,name=openid,proto3" json:"openid,omitempty"`
	// 用户给开放应用授权的持久授权码，此码目前无过期时间
	PersistentCode string `protobuf:"bytes,4,opt,name=persistent_code,json=persistentCode,proto3" json:"persistent_code,omitempty"`
	// 用户在当前钉钉开放平台账号范围内的唯一标识，同一个钉钉开放平台账号可以包含多个开放应用，同时也包含ISV的套件应用及企业应用
	Unionid              string   `protobuf:"bytes,5,opt,name=unionid,proto3" json:"unionid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnsGetPersistentCodeResponse) Reset()         { *m = SnsGetPersistentCodeResponse{} }
func (m *SnsGetPersistentCodeResponse) String() string { return proto.CompactTextString(m) }
func (*SnsGetPersistentCodeResponse) ProtoMessage()    {}
func (*SnsGetPersistentCodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sns_8c9a9af02e9da34c, []int{5}
}
func (m *SnsGetPersistentCodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnsGetPersistentCodeResponse.Unmarshal(m, b)
}
func (m *SnsGetPersistentCodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnsGetPersistentCodeResponse.Marshal(b, m, deterministic)
}
func (dst *SnsGetPersistentCodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnsGetPersistentCodeResponse.Merge(dst, src)
}
func (m *SnsGetPersistentCodeResponse) XXX_Size() int {
	return xxx_messageInfo_SnsGetPersistentCodeResponse.Size(m)
}
func (m *SnsGetPersistentCodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SnsGetPersistentCodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SnsGetPersistentCodeResponse proto.InternalMessageInfo

func (m *SnsGetPersistentCodeResponse) GetErrcode() int64 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *SnsGetPersistentCodeResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *SnsGetPersistentCodeResponse) GetOpenid() string {
	if m != nil {
		return m.Openid
	}
	return ""
}

func (m *SnsGetPersistentCodeResponse) GetPersistentCode() string {
	if m != nil {
		return m.PersistentCode
	}
	return ""
}

func (m *SnsGetPersistentCodeResponse) GetUnionid() string {
	if m != nil {
		return m.Unionid
	}
	return ""
}

// 获取用户授权的SNS_TOKEN请求参数
type SnsGetSnsTokenRequest struct {
	// 用户的openid
	Openid string `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	// 用户授权给钉钉开放应用的持久授权码
	PersistentCode       string   `protobuf:"bytes,2,opt,name=persistent_code,json=persistentCode,proto3" json:"persistent_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnsGetSnsTokenRequest) Reset()         { *m = SnsGetSnsTokenRequest{} }
func (m *SnsGetSnsTokenRequest) String() string { return proto.CompactTextString(m) }
func (*SnsGetSnsTokenRequest) ProtoMessage()    {}
func (*SnsGetSnsTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sns_8c9a9af02e9da34c, []int{6}
}
func (m *SnsGetSnsTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnsGetSnsTokenRequest.Unmarshal(m, b)
}
func (m *SnsGetSnsTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnsGetSnsTokenRequest.Marshal(b, m, deterministic)
}
func (dst *SnsGetSnsTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnsGetSnsTokenRequest.Merge(dst, src)
}
func (m *SnsGetSnsTokenRequest) XXX_Size() int {
	return xxx_messageInfo_SnsGetSnsTokenRequest.Size(m)
}
func (m *SnsGetSnsTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SnsGetSnsTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SnsGetSnsTokenRequest proto.InternalMessageInfo

func (m *SnsGetSnsTokenRequest) GetOpenid() string {
	if m != nil {
		return m.Openid
	}
	return ""
}

func (m *SnsGetSnsTokenRequest) GetPersistentCode() string {
	if m != nil {
		return m.PersistentCode
	}
	return ""
}

// 获取用户授权的SNS_TOKEN响应参数
type SnsGetSnsTokenResponse struct {
	// 返回码
	Errcode int64 `protobuf:"varint,1,opt,name=errcode,proto3" json:"errcode,omitempty"`
	// 对返回码的文本描述内容
	Errmsg string `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	// sns_token的过期时间
	ExpiresIn int64 `protobuf:"varint,3,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	// 用户授权的token
	SnsToken             string   `protobuf:"bytes,4,opt,name=sns_token,json=snsToken,proto3" json:"sns_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnsGetSnsTokenResponse) Reset()         { *m = SnsGetSnsTokenResponse{} }
func (m *SnsGetSnsTokenResponse) String() string { return proto.CompactTextString(m) }
func (*SnsGetSnsTokenResponse) ProtoMessage()    {}
func (*SnsGetSnsTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sns_8c9a9af02e9da34c, []int{7}
}
func (m *SnsGetSnsTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnsGetSnsTokenResponse.Unmarshal(m, b)
}
func (m *SnsGetSnsTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnsGetSnsTokenResponse.Marshal(b, m, deterministic)
}
func (dst *SnsGetSnsTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnsGetSnsTokenResponse.Merge(dst, src)
}
func (m *SnsGetSnsTokenResponse) XXX_Size() int {
	return xxx_messageInfo_SnsGetSnsTokenResponse.Size(m)
}
func (m *SnsGetSnsTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SnsGetSnsTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SnsGetSnsTokenResponse proto.InternalMessageInfo

func (m *SnsGetSnsTokenResponse) GetErrcode() int64 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *SnsGetSnsTokenResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *SnsGetSnsTokenResponse) GetExpiresIn() int64 {
	if m != nil {
		return m.ExpiresIn
	}
	return 0
}

func (m *SnsGetSnsTokenResponse) GetSnsToken() string {
	if m != nil {
		return m.SnsToken
	}
	return ""
}

// 获取用户授权的个人信息请求参数
type SnsGetUserInfoRequest struct {
	// 用户授权给开放应用的token
	SnsToken             string   `protobuf:"bytes,1,opt,name=sns_token,json=snsToken,proto3" json:"sns_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnsGetUserInfoRequest) Reset()         { *m = SnsGetUserInfoRequest{} }
func (m *SnsGetUserInfoRequest) String() string { return proto.CompactTextString(m) }
func (*SnsGetUserInfoRequest) ProtoMessage()    {}
func (*SnsGetUserInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sns_8c9a9af02e9da34c, []int{8}
}
func (m *SnsGetUserInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnsGetUserInfoRequest.Unmarshal(m, b)
}
func (m *SnsGetUserInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnsGetUserInfoRequest.Marshal(b, m, deterministic)
}
func (dst *SnsGetUserInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnsGetUserInfoRequest.Merge(dst, src)
}
func (m *SnsGetUserInfoRequest) XXX_Size() int {
	return xxx_messageInfo_SnsGetUserInfoRequest.Size(m)
}
func (m *SnsGetUserInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SnsGetUserInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SnsGetUserInfoRequest proto.InternalMessageInfo

func (m *SnsGetUserInfoRequest) GetSnsToken() string {
	if m != nil {
		return m.SnsToken
	}
	return ""
}

// sns 用户信息
type SnsGetUserInfo struct {
	// 手机
	MaskedMobile string `protobuf:"bytes,1,opt,name=maskedMobile,proto3" json:"maskedMobile,omitempty"`
	// 用户在钉钉上面的昵称
	Nick string `protobuf:"bytes,2,opt,name=nick,proto3" json:"nick,omitempty"`
	// 用户在当前开放应用内的唯一标识
	Openid string `protobuf:"bytes,3,opt,name=openid,proto3" json:"openid,omitempty"`
	// 用户在当前开放应用所属的钉钉开放平台账号内的唯一标识
	Unionid              string   `protobuf:"bytes,4,opt,name=unionid,proto3" json:"unionid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnsGetUserInfo) Reset()         { *m = SnsGetUserInfo{} }
func (m *SnsGetUserInfo) String() string { return proto.CompactTextString(m) }
func (*SnsGetUserInfo) ProtoMessage()    {}
func (*SnsGetUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_sns_8c9a9af02e9da34c, []int{9}
}
func (m *SnsGetUserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnsGetUserInfo.Unmarshal(m, b)
}
func (m *SnsGetUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnsGetUserInfo.Marshal(b, m, deterministic)
}
func (dst *SnsGetUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnsGetUserInfo.Merge(dst, src)
}
func (m *SnsGetUserInfo) XXX_Size() int {
	return xxx_messageInfo_SnsGetUserInfo.Size(m)
}
func (m *SnsGetUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SnsGetUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SnsGetUserInfo proto.InternalMessageInfo

func (m *SnsGetUserInfo) GetMaskedMobile() string {
	if m != nil {
		return m.MaskedMobile
	}
	return ""
}

func (m *SnsGetUserInfo) GetNick() string {
	if m != nil {
		return m.Nick
	}
	return ""
}

func (m *SnsGetUserInfo) GetOpenid() string {
	if m != nil {
		return m.Openid
	}
	return ""
}

func (m *SnsGetUserInfo) GetUnionid() string {
	if m != nil {
		return m.Unionid
	}
	return ""
}

// 获取用户授权的个人信息相应参数
type SnsGetUserInfoResponse struct {
	// 返回码
	Errcode int64 `protobuf:"varint,1,opt,name=errcode,proto3" json:"errcode,omitempty"`
	// 对返回码的文本描述内容
	Errmsg string `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	// sns 用户信息
	UserInfo             *SnsGetUserInfo `protobuf:"bytes,3,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SnsGetUserInfoResponse) Reset()         { *m = SnsGetUserInfoResponse{} }
func (m *SnsGetUserInfoResponse) String() string { return proto.CompactTextString(m) }
func (*SnsGetUserInfoResponse) ProtoMessage()    {}
func (*SnsGetUserInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sns_8c9a9af02e9da34c, []int{10}
}
func (m *SnsGetUserInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnsGetUserInfoResponse.Unmarshal(m, b)
}
func (m *SnsGetUserInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnsGetUserInfoResponse.Marshal(b, m, deterministic)
}
func (dst *SnsGetUserInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnsGetUserInfoResponse.Merge(dst, src)
}
func (m *SnsGetUserInfoResponse) XXX_Size() int {
	return xxx_messageInfo_SnsGetUserInfoResponse.Size(m)
}
func (m *SnsGetUserInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SnsGetUserInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SnsGetUserInfoResponse proto.InternalMessageInfo

func (m *SnsGetUserInfoResponse) GetErrcode() int64 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *SnsGetUserInfoResponse) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *SnsGetUserInfoResponse) GetUserInfo() *SnsGetUserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*SnsAuthorizeRequest)(nil), "oapi.SnsAuthorizeRequest")
	proto.RegisterType((*SnsAuthorizeResponse)(nil), "oapi.SnsAuthorizeResponse")
	proto.RegisterType((*QrconnectRequest)(nil), "oapi.QrconnectRequest")
	proto.RegisterType((*QrconnectResponse)(nil), "oapi.QrconnectResponse")
	proto.RegisterType((*SnsGetPersistentCodeRequest)(nil), "oapi.SnsGetPersistentCodeRequest")
	proto.RegisterType((*SnsGetPersistentCodeResponse)(nil), "oapi.SnsGetPersistentCodeResponse")
	proto.RegisterType((*SnsGetSnsTokenRequest)(nil), "oapi.SnsGetSnsTokenRequest")
	proto.RegisterType((*SnsGetSnsTokenResponse)(nil), "oapi.SnsGetSnsTokenResponse")
	proto.RegisterType((*SnsGetUserInfoRequest)(nil), "oapi.SnsGetUserInfoRequest")
	proto.RegisterType((*SnsGetUserInfo)(nil), "oapi.SnsGetUserInfo")
	proto.RegisterType((*SnsGetUserInfoResponse)(nil), "oapi.SnsGetUserInfoResponse")
}

func init() { proto.RegisterFile("sns.proto", fileDescriptor_sns_8c9a9af02e9da34c) }

var fileDescriptor_sns_8c9a9af02e9da34c = []byte{
	// 451 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xdf, 0x6b, 0x13, 0x41,
	0x10, 0xc7, 0xb9, 0x24, 0xad, 0xbd, 0x89, 0x56, 0x5d, 0x63, 0x09, 0xb4, 0x85, 0xb2, 0x2f, 0xfa,
	0x14, 0x89, 0xf6, 0x1f, 0xf0, 0x07, 0x48, 0x05, 0x51, 0xf3, 0x03, 0xc4, 0x97, 0x70, 0xbd, 0x9b,
	0xc6, 0xe5, 0xd2, 0xd9, 0x75, 0x67, 0x0f, 0xa4, 0xe0, 0xab, 0x7f, 0x8c, 0xfe, 0x93, 0xb2, 0xdb,
	0xbd, 0x24, 0x17, 0x2a, 0x4a, 0xfa, 0xb6, 0xf3, 0xdd, 0x9d, 0xf9, 0xcc, 0x7e, 0x67, 0xef, 0x20,
	0x65, 0xe2, 0x81, 0xb1, 0xda, 0x69, 0xd1, 0xd1, 0x99, 0x51, 0x32, 0x87, 0x47, 0x63, 0xe2, 0x97,
	0x95, 0xfb, 0xaa, 0xad, 0xba, 0xc2, 0x11, 0x7e, 0xab, 0x90, 0x9d, 0x38, 0x81, 0xae, 0xc5, 0x42,
	0x59, 0xcc, 0xdd, 0xd4, 0xaa, 0x7e, 0x72, 0x92, 0x3c, 0x4d, 0x47, 0xeb, 0x92, 0xe8, 0xc1, 0x0e,
	0xbb, 0xcc, 0x61, 0xbf, 0x15, 0xf6, 0xae, 0x83, 0xa0, 0xe6, 0xda, 0x60, 0xbf, 0x1d, 0x55, 0x1f,
	0xc8, 0x53, 0xe8, 0x35, 0x21, 0x6c, 0x34, 0x31, 0x8a, 0x23, 0x48, 0x27, 0x99, 0x9d, 0xa3, 0x9b,
	0xda, 0x45, 0x64, 0xac, 0x04, 0xf9, 0x0e, 0x1e, 0x7c, 0xb2, 0xb9, 0x26, 0xc2, 0xdc, 0xdd, 0xb2,
	0x2f, 0x39, 0x84, 0x87, 0x6b, 0xb5, 0xfe, 0x0b, 0x3f, 0x84, 0xc3, 0x31, 0xf1, 0x5b, 0x74, 0x1f,
	0xd1, 0xb2, 0x62, 0x87, 0xe4, 0x5e, 0xeb, 0x62, 0xe9, 0x90, 0x80, 0x4e, 0xae, 0x0b, 0x8c, 0x79,
	0x61, 0x2d, 0x7f, 0x27, 0x70, 0x74, 0x73, 0x4e, 0x24, 0xf6, 0xe1, 0x0e, 0x5a, 0xbb, 0xcc, 0x6b,
	0x8f, 0xea, 0x50, 0x1c, 0xc0, 0x2e, 0x5a, 0x7b, 0xc9, 0xf3, 0xd8, 0x77, 0x8c, 0xbc, 0xae, 0x0d,
	0x92, 0x2a, 0xa2, 0xa3, 0x31, 0x12, 0x4f, 0xe0, 0xbe, 0x59, 0x32, 0x66, 0xa1, 0x62, 0x27, 0x1c,
	0xd8, 0x37, 0x0d, 0xb4, 0x47, 0x56, 0xa4, 0xb4, 0xaf, 0xb0, 0x13, 0x0e, 0xd4, 0xa1, 0xfc, 0x0c,
	0x8f, 0xaf, 0x9b, 0x1d, 0x13, 0x4f, 0x74, 0x89, 0x54, 0x5f, 0x6d, 0xc5, 0x4c, 0xfe, 0xc5, 0x6c,
	0xdd, 0xc4, 0x94, 0x3f, 0x13, 0x38, 0xd8, 0x2c, 0xbd, 0xb5, 0x03, 0xc7, 0x00, 0xf8, 0xdd, 0x28,
	0x8b, 0x3c, 0x53, 0x14, 0x5c, 0x68, 0x8f, 0xd2, 0xa8, 0x9c, 0x91, 0x38, 0x0c, 0x6f, 0x7a, 0xe6,
	0x3c, 0x25, 0x5a, 0xb0, 0xc7, 0x91, 0x2a, 0x4f, 0xeb, 0x2b, 0x4e, 0x19, 0xed, 0x19, 0x5d, 0xe8,
	0xfa, 0x8a, 0x8d, 0xac, 0x64, 0x23, 0xeb, 0x0a, 0xf6, 0x9b, 0x59, 0x42, 0xc2, 0xdd, 0xcb, 0x8c,
	0x4b, 0x2c, 0xde, 0xeb, 0x73, 0xb5, 0xa8, 0x87, 0xde, 0xd0, 0xfc, 0x83, 0x20, 0x95, 0x97, 0xb1,
	0xfb, 0xb0, 0xfe, 0xeb, 0xf4, 0xd6, 0x86, 0xd2, 0x69, 0x0e, 0xe5, 0x47, 0xed, 0xdc, 0xaa, 0xe3,
	0xad, 0x9d, 0x1b, 0x42, 0x5a, 0x31, 0xda, 0x99, 0xa2, 0x0b, 0x1d, 0x1a, 0xe8, 0x3e, 0xef, 0x0d,
	0xfc, 0x57, 0x3f, 0xd8, 0x40, 0xec, 0x55, 0x71, 0xf5, 0xea, 0xf8, 0x4b, 0x37, 0xfc, 0x1d, 0xf8,
	0x99, 0x3f, 0xf7, 0xab, 0x75, 0xef, 0x8d, 0xa2, 0xf9, 0x24, 0x5b, 0x94, 0x83, 0x0f, 0x99, 0x51,
	0xe7, 0xbb, 0x61, 0xf3, 0xc5, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x88, 0x13, 0x34, 0x52, 0x47,
	0x04, 0x00, 0x00,
}
